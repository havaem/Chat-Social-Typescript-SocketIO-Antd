--CAU 1_A
CREATE PROCEDURE CAU1_A  AS 
BEGIN 
	DECLARE CURSOR_1A CURSOR 
	FOR SELECT TINH.MATINH, TENTINH , COUNT(MACT) AS SOLUONG 
		FROM CAUTHU CT INNER JOIN CAULACBO CLB ON CT.MACLB = CLB.MACLB 
						INNER JOIN TINH ON CLB.MATINH = TINH.MATINH
		WHERE CT.MAQG != 'VN'
		GROUP BY TINH.MATINH, TENTINH
	OPEN CURSOR_1A
	DECLARE @MATINH VARCHAR(5), @TENTINH NVARCHAR(100), @SOLUONG NUMERIC
	PRINT 'Mã Tỉnh - Tên Tỉnh - Số lượng Cầu thủ quản lý'
	WHILE 0 = 0
		BEGIN
			FETCH NEXT FROM CURSOR_1A INTO @MATINH, @TENTINH, @SOLUONG
			IF @@FETCH_STATUS <> 0 BREAK
			PRINT @MATINH + '-' + @TENTINH + '-' + CAST (@SOLUONG AS NVARCHAR(100))
		END	
	CLOSE CURSOR_1A
	DEALLOCATE CURSOR_1A
END

--DROP PROCEDURE CAU1_A 
EXEC CAU1_A 


--CAU 1_B

CREATE PROCEDURE CAU1_B (@TENCLB NVARCHAR(100), @NAM INT) AS
BEGIN
	DECLARE cursor0 CURSOR
	FOR SELECT VONG, NGAYTD, CLB1.TENCLB, CLB2.TENCLB, KETQUA FROM CAULACBO CLB1
		INNER JOIN TRANDAU ON TRANDAU.MACLB1 = CLB1.MACLB OR TRANDAU.MACLB2 = CLB1.MACLB
		INNER JOIN CAULACBO CLB2 ON CLB2.MACLB = TRANDAU.MACLB1 OR CLB2.MACLB = TRANDAU.MACLB2
	WHERE KETQUA NOT IN('0-0', '0-1', '1-0', '1-1', '2-0', '0-2')
			AND (CLB1.TENCLB = @TENCLB OR CLB2.TENCLB = @TENCLB) AND NAM = @NAM
	OPEN cursor0
	DECLARE @VONG INT, @NGAYTD DATETIME, @TENCLB1 nvarchar(100), @TENCLB2 nvarchar(100), @KETQUA varchar(5)
	WHILE 0=0
		BEGIN
			FETCH NEXT FROM cursor0 INTO @VONG, @NGAYTD, @TENCLB1, @TENCLB2, @KETQUA
			IF @@FETCH_STATUS <> 0 BREAK
			PRINT cast(@VONG as varchar(10)) + ' - ' + cast(@NGAYTD as varchar(10)) + ' - '  + @TENCLB1 + ' - ' + @TENCLB2 + ' - ' + @KETQUA
		END
	CLOSE cursor0
	DEALLOCATE cursor0
END

DROP PROCEDURE CAU1_B
EXEC CAU1_B @TENCLB = N'BECAMEX BÌNH DƯƠNG', @NAM = 2009

--CAU 2B
CREATE TRIGGER UPDATE_SOAO ON CAUTHU
AFTER INSERT
AS
BEGIN
    IF NOT EXISTS (SELECT SO FROM INSERTED) 
    BEGIN
        DECLARE @SoAo int, @MaCLB varchar(5), @MaCT varchar(5)
        SET @SoAo = 1
        SELECT @MaCLB = MACLB, @MaCT = MACT FROM inserted
        WHILE (@SoAo IN (SELECT ct.SO FROM CAUTHU ct WHERE ct.MACLB = @MaCLB))
        BEGIN
            SET @SoAo = @SoAo + 1
        END
        UPDATE CAUTHU
        SET SO = @SoAo
        WHERE MACT = @MaCT
    END
END

 --CAU 2A
CREATE TRIGGER Thi_T_Cau2a ON TRANDAU
AFTER INSERT
AS
BEGIN
	DECLARE @KETQUA VARCHAR(5), @MACLB1 VARCHAR(5), @MACLB2 VARCHAR(5), @VONG INT, @NAM INT, @KQ1 INT, @KQ2 INT,
			@THANG1 INT, @HOA1 INT, @THUA1 INT, @THANG2 INT, @HOA2 INT, @THUA2 INT, @THANG INT, @HOA INT, @THUA INT, @SOTRAN1 INT, @SOTRAN2 INT
	IF EXISTS (SELECT * FROM INSERTED)
	BEGIN
		SELECT @KETQUA = KETQUA, @MACLB1 = MACLB1, @MACLB2 = MACLB2, @VONG = VONG, @NAM = NAM, @THANG = 0, @HOA = 0, @THUA = 0, 
			@KQ1 = CAST(SUBSTRING(KETQUA, 0, CHARINDEX('-', KETQUA)) AS INT), 
			@KQ2 = CAST(SUBSTRING(KETQUA, CHARINDEX('-', KETQUA) + 1, LEN(KETQUA) - CHARINDEX('-', KETQUA) - 1) AS INT)
			FROM INSERTED 
		SELECT @THANG = IIF(@KQ1 > @KQ2, 1, 0), @THUA = IIF(@KQ1 < @KQ2, 1, 0), @HOA = IIF(@KQ1 = @KQ2, 1, 0)
		SELECT @THANG1 = THANG, @THUA1 = THUA, @HOA1 = HOA, @SOTRAN1 = SOTRAN FROM BANGXH WHERE @MACLB1 = MACLB AND NAM = @NAM AND VONG = @VONG
		SELECT @THANG2 = THANG, @THUA2 = THUA, @HOA2 = HOA, @SOTRAN2 = SOTRAN FROM BANGXH WHERE @MACLB2 = MACLB AND NAM = @NAM AND VONG = @VONG
		UPDATE BANGXH 
		SET THANG = @THANG1 + @THANG, THUA = @THUA1 + @THUA, HOA = @HOA1 + @HOA, SOTRAN = @SOTRAN1 + 1
		WHERE MACLB = @MACLB1 
		UPDATE BANGXH 
		SET THANG = @THANG2 + @THUA, THUA = @THUA2 + @THANG, HOA = @HOA2 + @HOA, SOTRAN = @SOTRAN2 + 1
		WHERE MACLB = @MACLB2
	END
END